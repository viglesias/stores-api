---
openapi: 3.0.1
info:
  title: API V1
  version: v1
paths:
  "/api/v1/Orders":
    get:
      summary: Retrieves Orders
      description: Retrieves all the Orders
      responses:
        '200':
          description: Orders retrieved
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    store_id:
                      type: integer
                    product_ids:
                      type: object
                      properties:
                        type: array
                        items:
                          type: integer
                    total:
                      type: float
    post:
      summary: Creates Order
      description: Creates Order
      parameters: []
      responses:
        '201':
          description: stote created
  "/api/v1/Orders/{id}":
    parameters:
    - name: id
      in: path
      required: true
      schema:
        type: integer
    get:
      summary: Show Order
      responses:
        '200':
          description: Order retrieved
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  store_id:
                    type: integer
                  product_ids:
                    type: object
                    properties:
                      type: array
                      items:
                        type: integer
                  total:
                    type: float
        '404':
          description: invalid Order id
    put:
      summary: Updates Order
      description: Updates Order
      parameters: []
      responses:
        '200':
          description: Order updated
    delete:
      summary: Deletes Order
      description: Deletes specific Order
      responses:
        '204':
          description: Order deleted
        '404':
          description: Order not found
  "/api/v1/products":
    get:
      summary: Retrieves Products
      description: Retrieves all the products
      responses:
        '200':
          description: Products retrieved
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    name:
                      type: string
                    sku:
                      type: string
                    product_type:
                      type: string
                    price:
                      type: float
    post:
      summary: Creates Product
      description: Creates Product
      parameters: []
      responses:
        '201':
          description: stote created
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                sku:
                  type: string
                product_type:
                  type: string
                price:
                  type: float
  "/api/v1/products/{id}":
    parameters:
    - name: id
      in: path
      required: true
      schema:
        type: integer
    get:
      summary: Show Product
      responses:
        '200':
          description: product retrieved
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  sku:
                    type: string
                  product_type:
                    type: string
                  price:
                    type: float
        '404':
          description: invalid product id
    put:
      summary: Updates product
      description: Updates product
      parameters: []
      responses:
        '200':
          description: product updated
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                sku:
                  type: string
                product_type:
                  type: string
                price:
                  type: float
    delete:
      summary: Deletes product
      description: Deletes specific product
      responses:
        '204':
          description: product deleted
        '404':
          description: product not found
  "/api/v1/stores":
    get:
      summary: Retrieves Stores
      description: Retrieves all the stores
      responses:
        '200':
          description: Stores retrieved
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    name:
                      type: string
                    address:
                      type: string
                    email:
                      type: string
                    phone:
                      type: string
    post:
      summary: Creates Store
      description: Creates Store
      parameters: []
      responses:
        '201':
          description: store created
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                store:
                  type: object
                  properties:
                    name:
                      type: string
                    address:
                      type: string
                    email:
                      type: string
                    phone:
                      type: string
                  required:
                  - name
                  - address
                  - email
                  - phone
  "/api/v1/stores/{id}":
    parameters:
    - name: id
      in: path
      required: true
      schema:
        type: integer
    get:
      summary: Show Store
      responses:
        '200':
          description: store retrieved
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  address:
                    type: string
                  email:
                    type: string
                  phone:
                    type: string
        '404':
          description: invalid store id
    put:
      summary: Updates Store
      description: Updates Store
      parameters: []
      responses:
        '200':
          description: store updated
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                store:
                  type: object
                  properties:
                    name:
                      type: string
                    address:
                      type: string
                    email:
                      type: string
                    phone:
                      type: string
                  required:
                  - name
                  - address
                  - email
                  - phone
    delete:
      summary: Deletes Store
      description: Deletes specific store
      responses:
        '204':
          description: store deleted
        '404':
          description: store not found
  "/api/v1/stores/{id}/products":
    parameters:
    - name: id
      in: path
      required: true
      schema:
        type: integer
    get:
      summary: Show Store products
      responses:
        '200':
          description: Products retrieved
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    name:
                      type: string
                    sku:
                      type: string
                    product_type:
                      type: string
                    price:
                      type: float
        '404':
          description: invalid store id
  "/api/v1/stores/{id}/add_product/{product_id}":
    parameters:
    - name: id
      in: path
      required: true
      schema:
        type: integer
    - name: product_id
      in: path
      required: true
      schema:
        type: integer
    post:
      summary: Add product to store
      responses:
        '200':
          description: Products retrieved
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    name:
                      type: string
                    sku:
                      type: string
                    product_type:
                      type: string
                    price:
                      type: float
        '404':
          description: invalid store id
servers:
- url: https://{defaultHost}
  variables:
    defaultHost:
      default: stores-api-pj.herokuapp.com
